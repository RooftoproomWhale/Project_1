<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace속성:매퍼파일의 완전한경로 .xml는 생략 -->
<!-- ※ibatis와는 다르게 id값에 .(dot)를 사용 못한다. -->
<mapper namespace="mybatis.SqlMapper">
	
	<select id="memberIsLogin" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM member WHERE mem_email=#{mem_email} AND mem_pwd=#{mem_pwd}
	</select>
	<select id="memberIsLoginJson" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT * FROM member WHERE mem_email=#{mem_email} AND mem_pwd=#{mem_pwd}
	</select>
	
	 <insert id="signInsert" parameterType="java.util.Map"> 
		INSERT INTO MEMBER VALUES(#{mem_email}, #{mem_pwd}, #{mem_name} ,#{gender}, #{tel}, #{age}, #{height}, #{weight}, #{role}, #{enable} )
	 </insert>
	 
	 <select id="signView" parameterType="MemberDTO">
		 SELECT * FROM MEMBER WHERE MEM_EMAIL = #{email}
	 </select>
	 
 	 <delete id="signDelete" parameterType="MemberDTO">
		DELETE FROM MEMBER WHERE MEM_EMAIL = #{email}
	 </delete>
	 	
	 <update id="signUpdate" parameterType="MemberDTO">
		UPDATE MEMBER SET name = #{name}, age = #{age}, gender = #{gender}, phone = #{phone}, email = #{email}, height = #{height} weight = {weight} where email = #{email} 
	 </update>
	 
	 
	<insert id="memoInsert" parameterType="java.util.Map">
		INSERT INTO onememo(no,title,content,id)
		VALUES(SEQ_ONEMEMO.NEXTVAL,#{title},#{content},#{id})
	</insert>
	<update id="memoUpdate" parameterType="java.util.Map">
		UPDATE onememo SET title=#{title},content=#{content} WHERE no=#{no}	
	</update>
	<delete id="memoDelete" parameterType="java.util.Map">
		DELETE onememo WHERE no=#{no}
	</delete>

	<insert id="presInsert" parameterType="java.util.Map">
		INSERT INTO prescription VALUES(SEQ_PRESCRIPTION.NEXTVAL,#{mem_email},#{pres_date},#{duration},#{count},#{medi_name})
	</insert>
	
	<select id="covidMapSelect" resultType="java.util.Map">
		SELECT * FROM corona_patient
	</select>
	<select id="hospitalSelect" resultType="java.util.Map">
		SELECT * FROM hospital
	</select>
	<select id="hospitalSelectByKeyWord" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT * FROM hospital WHERE hosp_name LIKE '%' || #{search_keyword} || '%'
	</select>
	<select id="hospitalNameSelectByKeyWord" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT distinct hosp_name FROM hospital WHERE hosp_name LIKE '%' || #{search_keyword} || '%'
	</select>
	<select id="presSelectList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT * FROM prescription WHERE mem_email = #{mem_email}
	</select>
	
	<select id="hospitalDetailSelect" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT D.dept_name, HD.*
		FROM
		(SELECT H.*, D.dept_code FROM hospital H JOIN hos_dept D ON H.hosp_code = D.hosp_code) HD JOIN department D ON HD.dept_code = D.dept_code
		WHERE HD.address = #{address}
	</select>

	<select id="hospitalSelectByXY" parameterType="java.util.Map" resultType="HospitalDTO">
		SELECT *
		FROM(SELECT (6371*ACOS(COS(RADIANS(#{lng}))*COS(RADIANS(cor_x))*COS(RADIANS(cor_y)-RADIANS(#{lat}))+SIN(RADIANS(#{lng}))*SIN(RADIANS(cor_x)))) 
		AS distanceByXY, h.*
		FROM hospital h) disData
		WHERE disData.distanceByXY <![CDATA[ <= ]]> 0.5
	</select>

	<select id="pharmacySelectByKeyWord" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT * FROM pharmacy WHERE phar_name LIKE '%' || #{search_keyword} || '%'
	</select>
	<select id="pharmacyNameSelectByKeyWord" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT distinct phar_name FROM pharmacy WHERE phar_name LIKE '%' || #{search_keyword} || '%'
	</select>

	<select id="pharmacyDetailSelect" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT * FROM pharmacy WHERE address = #{address}
	</select>
	<select id="pharmacySelectByXY" parameterType="java.util.Map" resultType="pharmacyDTO">
		SELECT *
		FROM(SELECT (6371*ACOS(COS(RADIANS(#{lng}))*COS(RADIANS(cor_x))*COS(RADIANS(cor_y)-RADIANS(#{lat}))+SIN(RADIANS(#{lng}))*SIN(RADIANS(cor_x)))) 
		AS distanceByXY, p.*
		FROM pharmacy p) disData
		WHERE disData.distanceByXY <![CDATA[ <= ]]> 0.5
	</select>
<!-- 페이징 -->
	<select id="countRecordHosAuth" resultType="int">
		SELECT COUNT(*) FROM HOSPITAL WHERE AUTH IS NOT NULL
	</select>
	<select id="countRecordAccount" resultType="int">
		SELECT COUNT(*) FROM HOSPITAL WHERE AUTH IS NOT NULL
	</select>
	<select id="countRecordAppointment" resultType="int">
		SELECT COUNT(*) FROM HOSPITAL WHERE AUTH IS NOT NULL
	</select>
	
	
<!--관리자단 -->
	<!-- 대쉬보드 -->
	<select id="memberCount" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM MEMBER
	</select>
	<select id="hospCount" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM HOSPITAL WHERE AUTH = '제휴승인됨'
	</select>
	<select id="presCount" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM PRESCRIPTION
	</select>
	<select id="aptCount" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM RESERVATION
	</select>
	<!-- 차트 -->
	<select id="genderChartMale" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM MEMBER WHERE GENDER='남자'
	</select>
	<select id="genderChartFemale" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM MEMBER WHERE GENDER='여자'
	</select>
	
	<select id="under10" resultType="int">
		SELECT COUNT(*) FROM MEMBER WHERE AGE <![CDATA[ < ]]> 10
	</select>
	<select id="over10under20" resultType="int">
		SELECT COUNT(*) FROM MEMBER WHERE AGE <![CDATA[ >= ]]> 10 AND AGE <![CDATA[ < ]]> 20
	</select>
	<select id="over20under30" resultType="int">
		SELECT COUNT(*) FROM MEMBER WHERE AGE <![CDATA[ >= ]]> 20 AND AGE <![CDATA[ < ]]> 30
	</select>
	<select id="over30under40" resultType="int">
		SELECT COUNT(*) FROM MEMBER WHERE AGE <![CDATA[ >= ]]> 30 AND AGE <![CDATA[ < ]]> 40
	</select>
	<select id="over40under50" resultType="int">
		SELECT COUNT(*) FROM MEMBER WHERE AGE <![CDATA[ >= ]]> 40 AND AGE <![CDATA[ < ]]> 50
	</select>
	<select id="over50under60" resultType="int">
		SELECT COUNT(*) FROM MEMBER WHERE AGE <![CDATA[ >= ]]> 50 AND AGE <![CDATA[ < ]]> 60
	</select>
	<select id="over60" resultType="int">
		SELECT COUNT(*) FROM MEMBER WHERE AGE <![CDATA[ > ]]> 60
	</select>

	<!-- 사용자 관리 -->
	<select id="selectMemberList" parameterType="java.util.Map" resultType="MemberDTO">
		SELECT * 
		FROM (
			SELECT ROWNUM RN, A.* 
				FROM (
						SELECT * FROM MEMBER
						) A
				)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	<select id="selectMemberListUser" parameterType="java.util.Map" resultType="MemberDTO">
<!-- 		SELECT *  -->
<!-- 			FROM ( -->
<!-- 				SELECT ROWNUM RN, A.*  -->
<!-- 					FROM ( -->
							SELECT * FROM MEMBER WHERE ROLE='ROLE_MEM'
<!-- 							) A -->
<!-- 					) -->
<!-- 			WHERE RN BETWEEN #{start} AND #{end} -->
	</select>
	<select id="selectMemberListHosp" parameterType="java.util.Map" resultType="MemberDTO">
<!-- 		SELECT *  -->
<!-- 			FROM ( -->
<!-- 				SELECT ROWNUM RN, A.*  -->
<!-- 					FROM ( -->
							SELECT * FROM MEMBER WHERE ROLE='ROLE_HOS' 
<!-- 							) A -->
<!-- 					) -->
<!-- 			WHERE RN BETWEEN #{start} AND #{end} -->
	</select>
	<select id="selectOne" parameterType="java.util.Map" resultType="MemberDTO">
		SELECT * FROM MEMBER WHERE MEM_EMAIL = #{userEmail}
	</select>
	<update id="adminUserUpdate" parameterType="java.util.Map">
		UPDATE MEMBER SET MEM_EMAIL =#{upEmail}, MEM_NAME = #{upName}, MEM_PWD = #{upPwd}, TEL = #{upTel} WHERE MEM_EMAIL = #{userEmail}
	</update>
	<delete id="adminUserDelete" parameterType="java.util.Map">
		DELETE FROM MEMBER WHERE MEM_EMAIL = #{userEmail}
	</delete>
	<select id="selectAccount_Search" parameterType="java.util.Map" resultType="MemberDTO">
		SELECT * FROM MEMBER WHERE MEM_NAME LIKE '%' || #{search_keyword} || '%'
	</select>
	
	<!-- 병원 제휴 -->
	<select id="selectAuthList" parameterType="java.util.Map" resultType="HospitalDTO">
		SELECT * 
		FROM (
			SELECT ROWNUM RN, A.* 
				FROM (
						SELECT * FROM HOSPITAL WHERE AUTH IS NOT NULL 
						) A
				)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	<update id="updateAuth_O" parameterType="java.util.Map">
		UPDATE HOSPITAL SET AUTH = '제휴승인됨', APPROVED_DATE = SYSDATE WHERE HOSP_NAME = #{hosp_name}
	</update>
	<update id="updateAuth_X" parameterType="java.util.Map">
		UPDATE HOSPITAL SET AUTH = '제휴거절됨' WHERE HOSP_NAME = #{hosp_name}
	</update>
	<select id="selectAuth_Search" parameterType="java.util.Map" resultType="HospitalDTO">
		SELECT * FROM HOSPITAL WHERE AUTH IS NOT NULL AND HOSP_NAME LIKE '%' || #{search_keyword} || '%'
	</select>
	
	<!-- 예약 관리 -->
	<select id="selectAptList" parameterType="java.util.Map" resultType="ReservationDTO">
	SELECT * 
		FROM (
			SELECT ROWNUM RN, A.* 
				FROM (
						SELECT H.*, R.* FROM RESERVATION R JOIN HOSPITAL H ON R.HOSP_CODE = H.HOSP_CODE
						) A
				)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	<select id="selectOneApt" parameterType="java.util.Map" resultType="ReservationDTO">
		SELECT M.*, R.* FROM MEMBER M JOIN RESERVATION R ON M.MEM_EMAIL = R.MEM_EMAIL WHERE M.MEM_EMAIL = #{userEmail} 
	</select>
	<delete id="deleteApt" parameterType="java.util.Map">
		DELETE FROM RESERVATION WHERE MEM_EMAIL = #{userEmail}
	</delete>
	<select id="selectApt_Search" parameterType="java.util.Map" resultType="ReservationDTO">
		select h.*, r.* from reservation r join hospital h on r.hosp_code = h.hosp_code WHERE HOSP_NAME LIKE '%' || #{search_keyword} || '%'
	</select>
	
	<!-- 공지사항 관리 -->
	<insert id="">
	
	</insert>
	<update id="">
	
	</update>
	<select id="">
	
	</select>
	<delete id="">
	
	</delete>
</mapper>
