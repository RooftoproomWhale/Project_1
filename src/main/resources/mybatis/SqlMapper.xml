<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace속성:매퍼파일의 완전한경로 .xml는 생략 -->
<!-- ※ibatis와는 다르게 id값에 .(dot)를 사용 못한다. -->
<mapper namespace="mybatis.SqlMapper">
	<select id="memberIsLogin" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM member WHERE mem_email=#{mem_email} AND mem_pwd=#{mem_pwd}
	</select>
	<update id="hosAuthSub" parameterType="java.util.Map">
		UPDATE HOSPITAL SET AUTH = '승인대기중' WHERE HOSP_NAME = #{name}
	</update>

<<<<<<< HEAD
  	<!-- 공지사항 추가하기 -->
    <insert id="insertNotice" parameterType="java.util.Map">
        INSERT INTO notification_bbs VALUES(SEQ_NOTIFICATION.NEXTVAL,#{mem_email},#{title},#{content},SYSDATE,#{file_addr})
    </insert>
    <!-- 공지사항 리스트보기 -->
    <select id="listNotice" resultType="BoardDTO">
    	select * from NOTIFICATION_BBS order by noti_no DESC
    </select>
	<!-- 공지사항 상세보기 -->
    <select id="detailNotice" resultType="BoardDTO">
        select * from NOTIFICATION_BBS where noti_no = #{no}
    </select>
	<!-- 공지사항 삭제하기 -->
    <delete id="deleteNotice">
        delete from NOTIFICATION_BBS where noti_no = #{no}
    </delete>
	<!-- 공지사항 수정하기 -->
    <update id="updateNotice"> 
        update NOTIFICATION_BBS set title=#{title} , content = #{content} where noti_no = #{no} 
    </update> 
	
	 <!-- <insert id="signInsert" parameterType="java.util.Map"> 
		INSERT INTO MEMBER VALUES(#{mem_email}, #{mem_pwd}, #{mem_name} ,#{gender}, #{tel}, #{age}, #{height}, #{weight}, #{role}, #{enable} )
	 <insert id="signInsert" parameterType="java.util.Map"> 
		INSERT INTO MEMBER VALUES(#{mem_email}, #{mem_pwd}, #{mem_name} ,#{gender}, #{tel}, #{age}, #{height}, #{weight}, #{role}, #{enable},SYSDATE )
	 </insert>
	 
=======
	<!-- QnA -->
	<select id="listQnA" parameterType="java.util.Map" resultType="QnADTO">
		select * from qna
	</select>
	<insert id="insertQnA" parameterType="java.util.Map">
		INSERT INTO QNA VALUES(SEQ_QNA.NEXTVAL,#{user}, #{title}, #{content}, SYSDATE, NULL, NULL)
	</insert>
>>>>>>> branch 'master' of https://github.com/RooftoproomWhale/Project_1.git
	 <select id="signView" parameterType="java.util.Map" resultType="MemberDTO">
		 SELECT * FROM MEMBER WHERE MEM_EMAIL = #{id}
	 </select>
	 	 <select id="selectCount" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT p.precount,r.resercount,(SELECT MAX(PRES_DATE) FROM prescription  WHERE MEM_EMAIL = #{id})resdate FROM(SELECT count(*) precount FROM prescription WHERE MEM_EMAIL = #{id})p,
		(SELECT count(*) resercount FROM reservation WHERE MEM_EMAIL = #{id})r
	 </select>
	 
 	 <delete id="signDelete" parameterType="MemberDTO">
		DELETE FROM MEMBER WHERE MEM_EMAIL = #{userid}
	 </delete>
	 	
	 <update id="signUpdate" parameterType="java.util.Map" >
		UPDATE MEMBER SET mem_name = #{name}, age = #{age}, gender = #{gender}, tel = #{tel},  height = #{height},weight = #{weight} where mem_email = #{id} 
	 </update>
	 
	<select id="seletnew" parameterType="java.util.Map" resultType="reservationDTO">
	SELECT h.hosp_name,r.sel_symp FROM reservation r JOIN hospital h on r.hosp_code=h.hosp_code
	WHERE r.mem_email = #{id} AND RES_DATE=(SELECT MAX(RES_DATE)FROM reservation)
	</select>
	<!-- 회원가입 검색 병원 -->
	<select id="hosListSearch" parameterType="java.util.Map" resultType="HospitalDTO">
		SELECT * FROM HOSPITAL WHERE HOSP_NAME LIKE '%' || #{search_keyword} || '%'
	</select>
 	
 	<!-- QnA 답글 -->
	<update id="commentInsert" parameterType="java.util.Map">
      UPDATE QNA SET ANSWER_TITLE = #{answerTitle}, ANSWER_CONTENT = #{answerContent} WHERE no = #{no}
   </update>
   <update id="commentUpdate" parameterType="java.util.Map">
      UPDATE QNA SET ANSWER_TITLE = #{answerTitle}, ANSWER_CONTENT = #{answerContent} WHERE cno = #{cno}
   </update>
   <delete id="commentDelete" parameterType="java.util.Map">
      DELETE QNA WHERE cno = #{cno}
   </delete>
   <delete id="commentDeleteByNo" parameterType="java.util.Map">
      DELETE QNA WHERE no = #{no}
   </delete>

    <!-- 공지사항 추가하기 -->
    <insert id="insertNotice">
        insert into NOTIFICATION_BBS values(SEQ_NOTIFICATION.nextval, #{user}, #{title}, #{content}, SYSDATE, null)
    </insert>
    <!-- 공지사항 리스트보기 -->
    <select id="listNotice" resultType="BoardDTO">
       select * from NOTIFICATION_BBS order by noti_no DESC
    </select>
    <!-- 공지사항 상세보기 -->
    <select id="detailNotice" resultType="BoardDTO">
        select * from NOTIFICATION_BBS where noti_no = #{no}
    </select>
    <!-- 공지사항 삭제하기 -->
    <delete id="deleteNotice">
        delete from NOTIFICATION_BBS where noti_no = #{no}
    </delete>
    <!-- 공지사항 수정하기 -->
    <update id="updateNotice"> 
        update NOTIFICATION_BBS set title=#{title} , content = #{content} where noti_no = #{no} 
    </update> 

   <insert id="presInsert" parameterType="java.util.Map">
      INSERT INTO prescription VALUES(SEQ_PRESCRIPTION.NEXTVAL,#{mem_email},#{pres_date},#{duration},#{count},#{medi_name})
   </insert>
   
   <select id="covidMapSelect" resultType="java.util.Map">
      SELECT * FROM corona_patient
   </select>
   <select id="hospitalSelect" resultType="java.util.Map">
      SELECT * FROM hospital
   </select>
   <select id="hospitalSelectByKeyWord" parameterType="java.util.Map" resultType="java.util.Map">
      <!-- SELECT * FROM hospital WHERE hosp_name LIKE '%' || #{search_keyword} || '%' -->
      SELECT H.*, D.dept_name FROM hospital H JOIN hos_dept D ON H.hosp_code = D.hosp_code
	  WHERE H.hosp_name LIKE '%' || #{search_keyword} || '%'
   </select>
   <select id="hospitalNameSelectByKeyWord" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT distinct hosp_name FROM hospital WHERE hosp_name LIKE '%' || #{search_keyword} || '%'
   </select>
   <select id="presSelectList" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT * FROM prescription WHERE mem_email = #{mem_email}
   </select>
   
   <select id="hospitalDetailSelect" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT D.dept_name, HD.*
      FROM
      (SELECT H.*, D.dept_code FROM hospital H JOIN hos_dept D ON H.hosp_code = D.hosp_code) HD JOIN department D ON HD.dept_code = D.dept_code
      WHERE HD.address = #{address}
   </select>

   <select id="hospitalSelectByXY" parameterType="java.util.Map" resultType="HospitalDTO">
      SELECT *
      FROM(SELECT (6371*ACOS(COS(RADIANS(#{lng}))*COS(RADIANS(cor_x))*COS(RADIANS(cor_y)-RADIANS(#{lat}))+SIN(RADIANS(#{lng}))*SIN(RADIANS(cor_x)))) 
      AS distanceByXY, h.*
      FROM hospital h) disData
      WHERE disData.distanceByXY <![CDATA[ <= ]]> 0.5
   </select>

   <select id="pharmacySelectByKeyWord" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT * FROM pharmacy WHERE phar_name LIKE '%' || #{search_keyword} || '%'
   </select>
   <select id="pharmacyNameSelectByKeyWord" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT distinct phar_name FROM pharmacy WHERE phar_name LIKE '%' || #{search_keyword} || '%'
   </select>

   <select id="pharmacyDetailSelect" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT * FROM pharmacy WHERE address = #{address}
   </select>
   <select id="pharmacySelectByXY" parameterType="java.util.Map" resultType="pharmacyDTO">
      SELECT *
      FROM(SELECT (6371*ACOS(COS(RADIANS(#{lng}))*COS(RADIANS(cor_x))*COS(RADIANS(cor_y)-RADIANS(#{lat}))+SIN(RADIANS(#{lng}))*SIN(RADIANS(cor_x)))) 
      AS distanceByXY, p.*
      FROM pharmacy p) disData
      WHERE disData.distanceByXY <![CDATA[ <= ]]> 0.5
   </select>
   
<!--관리자단 -->
   <!-- 페이징 -->
   <select id="countRecordHosAuth" resultType="int">
      SELECT COUNT(*) FROM HOSPITAL WHERE AUTH IS NOT NULL
   </select>
   <select id="countRecordAccount" resultType="int">
      SELECT COUNT(*) FROM MEMBER
   </select>
   <select id="countRecordAppointment" resultType="int">
      SELECT COUNT(*) FROM RESERVATION
   </select>
   <!-- 검색 페이징 -->
   <select id="countRecordHosSearch" parameterType="java.util.Map" resultType="int">
      SELECT COUNT(*) FROM HOSPITAL WHERE AUTH IS NOT NULL AND HOSP_NAME LIKE '%' || #{search_keyword} || '%'
   </select>
   <select id="countRecordAccSearch" parameterType="java.util.Map" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE MEM_NAME LIKE '%' || #{search_keyword} || '%'
   </select>
   <select id="countRecordAptSearch" parameterType="java.util.Map" resultType="int">
      select COUNT(*) from reservation r join hospital h on r.hosp_code = h.hosp_code WHERE HOSP_NAME LIKE '%' || #{search_keyword} || '%'
   </select>  
   
   <!-- 대쉬보드 -->
   <select id="memberCount" parameterType="java.util.Map" resultType="int">
      SELECT COUNT(*) FROM MEMBER
   </select>
   <select id="hospCount" parameterType="java.util.Map" resultType="int">
      SELECT COUNT(*) FROM HOSPITAL WHERE AUTH = '제휴승인됨'
   </select>
   <select id="presCount" parameterType="java.util.Map" resultType="int">
      SELECT COUNT(*) FROM PRESCRIPTION
   </select>
   <select id="aptCount" parameterType="java.util.Map" resultType="int">
      SELECT COUNT(*) FROM RESERVATION
   </select>
   
   <!-- 차트 -->
   <select id="genderChartMale" parameterType="java.util.Map" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE GENDER='남자'
   </select>
   <select id="genderChartFemale" parameterType="java.util.Map" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE GENDER='여자'
   </select>
   
   <select id="under10" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE AGE <![CDATA[ < ]]> 10
   </select>
   <select id="over10under20" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE AGE <![CDATA[ >= ]]> 10 AND AGE <![CDATA[ < ]]> 20
   </select>
   <select id="over20under30" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE AGE <![CDATA[ >= ]]> 20 AND AGE <![CDATA[ < ]]> 30
   </select>
   <select id="over30under40" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE AGE <![CDATA[ >= ]]> 30 AND AGE <![CDATA[ < ]]> 40
   </select>
   <select id="over40under50" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE AGE <![CDATA[ >= ]]> 40 AND AGE <![CDATA[ < ]]> 50
   </select>
   <select id="over50under60" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE AGE <![CDATA[ >= ]]> 50 AND AGE <![CDATA[ < ]]> 60
   </select>
   <select id="over60" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE AGE <![CDATA[ > ]]> 60
   </select>
   
   <select id="janMemCount" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE SIGNUP_DATE BETWEEN TO_DATE('2020-01-01','YYYY-MM-DD') AND TO_DATE('2020-02-01','YYYY-MM-DD')
   </select>
   <select id="febMemCount" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE SIGNUP_DATE BETWEEN TO_DATE('2020-02-01','YYYY-MM-DD') AND TO_DATE('2020-03-01','YYYY-MM-DD')
   </select>
   <select id="marMemCount" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE SIGNUP_DATE BETWEEN TO_DATE('2020-03-01','YYYY-MM-DD') AND TO_DATE('2020-04-01','YYYY-MM-DD')
   </select>
   <select id="aprMemCount" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE SIGNUP_DATE BETWEEN TO_DATE('2020-04-01','YYYY-MM-DD') AND TO_DATE('2020-05-01','YYYY-MM-DD')
   </select>
   <select id="mayMemCount" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE SIGNUP_DATE BETWEEN TO_DATE('2020-05-01','YYYY-MM-DD') AND TO_DATE('2020-06-01','YYYY-MM-DD')
   </select>
   <select id="junMemCount" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE SIGNUP_DATE BETWEEN TO_DATE('2020-06-01','YYYY-MM-DD') AND TO_DATE('2020-07-01','YYYY-MM-DD')
   </select>
   <select id="julMemCount" resultType="int">
      SELECT COUNT(*) FROM MEMBER WHERE SIGNUP_DATE BETWEEN TO_DATE('2020-07-01','YYYY-MM-DD') AND TO_DATE('2020-08-01','YYYY-MM-DD')
   </select>
   
   <select id="janAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE APPLY_TIME BETWEEN TO_DATE('2020-01-01','YYYY-MM-DD') AND TO_DATE('2020-02-01','YYYY-MM-DD')
   </select>
   <select id="febAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE APPLY_TIME BETWEEN TO_DATE('2020-02-01','YYYY-MM-DD') AND TO_DATE('2020-03-01','YYYY-MM-DD')
   </select>
   <select id="marAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE APPLY_TIME BETWEEN TO_DATE('2020-03-01','YYYY-MM-DD') AND TO_DATE('2020-04-01','YYYY-MM-DD')
   </select>
   <select id="aprAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE APPLY_TIME BETWEEN TO_DATE('2020-04-01','YYYY-MM-DD') AND TO_DATE('2020-05-01','YYYY-MM-DD')
   </select>
   <select id="mayAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE APPLY_TIME BETWEEN TO_DATE('2020-05-01','YYYY-MM-DD') AND TO_DATE('2020-06-01','YYYY-MM-DD')
   </select>
   <select id="junAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE APPLY_TIME BETWEEN TO_DATE('2020-06-01','YYYY-MM-DD') AND TO_DATE('2020-07-01','YYYY-MM-DD')
   </select>
   <select id="julAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE APPLY_TIME BETWEEN TO_DATE('2020-07-01','YYYY-MM-DD') AND TO_DATE('2020-08-01','YYYY-MM-DD')
   </select>
   
   <select id="naeAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '내과'
   </select>
   <select id="biAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '비뇨기과'
   </select>
   <select id="sanAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '산부인과'
   </select>
   <select id="seongAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '성형외과'
   </select>
   <select id="soAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '소아청소년과'
   </select>
   <select id="sinAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '신경과'
   </select>
   <select id="anAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '안과'
   </select>
   <select id="leeAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '이비인후과'
   </select>
   <select id="ilAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '일반외과'
   </select>
   <select id="jeongAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '정신건강의학과'
   </select>
   <select id="hyeongAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '정형외과'
   </select>
   <select id="chiAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '치과'
   </select>
   <select id="piAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '피부과'
   </select>
   <select id="hanAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '한방과'
   </select>
   <select id="giAptCount" resultType="int">
      SELECT COUNT(*) FROM RESERVATION WHERE DEPT_NAME = '기타'
   </select>

   <!-- 사용자 관리 -->
   <select id="selectMemberList" parameterType="java.util.Map" resultType="MemberDTO">
      SELECT * FROM (SELECT ROWNUM RN, A.* FROM (SELECT * FROM MEMBER) A)
      WHERE RN BETWEEN #{start} AND #{end}
   </select>
   <select id="selectMemberListUser" parameterType="java.util.Map" resultType="MemberDTO">
<!--       SELECT *  -->
<!--          FROM ( -->
<!--             SELECT ROWNUM RN, A.*  -->
<!--                FROM ( -->
                     SELECT * FROM MEMBER WHERE ROLE='ROLE_MEM'
<!--                      ) A -->
<!--                ) -->
<!--          WHERE RN BETWEEN #{start} AND #{end} -->
   </select>
   <select id="selectMemberListHosp" parameterType="java.util.Map" resultType="MemberDTO">
<!--       SELECT *  -->
<!--          FROM ( -->
<!--             SELECT ROWNUM RN, A.*  -->
<!--                FROM ( -->
                     SELECT * FROM MEMBER WHERE ROLE='ROLE_HOS' 
<!--                      ) A -->
<!--                ) -->
<!--          WHERE RN BETWEEN #{start} AND #{end} -->
   </select>
   <select id="selectOne" parameterType="java.util.Map" resultType="MemberDTO">
      SELECT * FROM MEMBER WHERE MEM_EMAIL = #{userEmail}
   </select>
   <update id="adminUserUpdate" parameterType="java.util.Map">
      UPDATE MEMBER SET MEM_EMAIL =#{upEmail}, MEM_NAME = #{upName}, MEM_PWD = #{upPwd}, TEL = #{upTel} WHERE MEM_EMAIL = #{userEmail}
   </update>
   <delete id="adminUserDelete" parameterType="java.util.Map">
      DELETE FROM MEMBER WHERE MEM_EMAIL = #{userEmail}
   </delete>
   <select id="selectAccount_Search" parameterType="java.util.Map" resultType="MemberDTO">
      SELECT * FROM MEMBER WHERE MEM_NAME LIKE '%' || #{search_keyword} || '%'
   </select>
   
   <!-- 병원 제휴 -->
   <select id="selectAuthList" parameterType="java.util.Map" resultType="HospitalDTO">
      SELECT * 
      FROM (
         SELECT ROWNUM RN, A.* 
            FROM (
                  SELECT * FROM HOSPITAL WHERE AUTH IS NOT NULL 
                  ) A
            )
      WHERE RN BETWEEN #{start} AND #{end}
   </select>
   <update id="updateAuth_O" parameterType="java.util.Map">
      UPDATE HOSPITAL SET AUTH = '제휴승인됨', APPROVED_DATE = SYSDATE WHERE HOSP_NAME = #{hosp_name}
   </update>
   <update id="updateAuth_X" parameterType="java.util.Map">
      UPDATE HOSPITAL SET AUTH = '제휴거절됨' WHERE HOSP_NAME = #{hosp_name}
   </update>
   <select id="selectAuth_Search" parameterType="java.util.Map" resultType="HospitalDTO">
      SELECT * FROM HOSPITAL WHERE AUTH IS NOT NULL AND HOSP_NAME LIKE '%' || #{search_keyword} || '%'
   </select>
   
   <!-- 예약 관리 -->
   <select id="selectAptList" parameterType="java.util.Map" resultType="ReservationDTO">
   SELECT * 
      FROM (
         SELECT ROWNUM RN, A.* 
            FROM (
                  SELECT H.*, r.apply_time, r.approved, r.dept_name, r.mem_email, r.res_date, r.res_time, r.reserv_no, r.sel_symp FROM RESERVATION R JOIN HOSPITAL H ON R.HOSP_CODE = H.HOSP_CODE
                  ) A
            )
      WHERE RN BETWEEN #{start} AND #{end}
   </select>
   <select id="selectOneApt" parameterType="java.util.Map" resultType="ReservationDTO">
      SELECT M.*, R.* FROM MEMBER M JOIN RESERVATION R ON M.MEM_EMAIL = R.MEM_EMAIL WHERE M.MEM_EMAIL = #{userEmail} 
   </select>
   <delete id="deleteApt" parameterType="java.util.Map">
      DELETE FROM RESERVATION WHERE MEM_EMAIL = #{userEmail}
   </delete>
   <select id="selectApt_Search" parameterType="java.util.Map" resultType="ReservationDTO">
      select h.*, r.* from reservation r join hospital h on r.hosp_code = h.hosp_code WHERE HOSP_NAME LIKE '%' || #{search_keyword} || '%'
   </select>
   
</mapper>